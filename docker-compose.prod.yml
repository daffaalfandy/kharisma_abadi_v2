version: '3.8'

# Production overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  database:
    restart: always
    # Don't expose port in production
    ports: []
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_INITDB_SKIP_TZINFO: "yes"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  redis:
    restart: always
    # Don't expose port in production
    ports: []
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  backend:
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    # Don't expose port (behind nginx)
    ports: []
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
      - DB_HOST=database
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_DATABASE}
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=${JWT_SECRET}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    # Remove volume mounts (use immutable binary)
    volumes:
      - ./backend/uploads:/app/uploads

  frontend:
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # Don't expose port (behind nginx)
    ports: []
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/api/v1
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  nginx:
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
