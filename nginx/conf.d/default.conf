upstream backend {
    server backend:8000;
}

upstream frontend {
    server frontend:3000;
}

server {
    listen 80;
    server_name _;

    # Redirect HTTP to HTTPS in production (uncomment for HTTPS)
    # return 301 https://$server_name$request_uri;

    # ============================================
    # API Routes
    # ============================================
    location /api/ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # ============================================
    # API Documentation
    # ============================================
    location /docs {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /openapi.json {
        proxy_pass http://backend;
        proxy_set_header Host $host;
    }

    # ============================================
    # Health Check Endpoints
    # ============================================
    location /health {
        access_log off;
        proxy_pass http://backend;
        proxy_set_header Host $host;
    }

    # ============================================
    # Frontend Routes
    # ============================================
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support (for Next.js hot reload in dev)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Buffering
        proxy_buffering off;
    }

    # ============================================
    # Static Files (Cache long-term)
    # ============================================
    location /_next/static {
        proxy_pass http://frontend;
        expires 365d;
        add_header Cache-Control "public, immutable";
    }

    location /public {
        proxy_pass http://frontend;
        expires 30d;
        add_header Cache-Control "public";
    }

    # ============================================
    # Deny access to sensitive files
    # ============================================
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# ============================================
# HTTPS Configuration (Uncomment for production)
# ============================================
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name kharisma.local;
#
#     # SSL Certificates
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # HSTS (Strict-Transport-Security)
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     # ... rest of configuration same as above
# }
#
# # Redirect HTTP to HTTPS
# server {
#     listen 80;
#     listen [::]:80;
#     server_name kharisma.local;
#     return 301 https://$server_name$request_uri;
# }
